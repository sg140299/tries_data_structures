#include<bits/stdc++.h>
using namespace std;

class Node{
    public:
    char data;
    unordered_map<char,Node*> children;
    bool terminal;

    Node(char d){
        data=d;
        terminal=false;
    }
};
class trie{
    Node* root;
    int cnt;
    public:

    trie(){
        root=new Node('\0');
        cnt=0;
    }
    void insert(char *w){
        Node* temp=root;
        for(int i=0;w[i]!='\0';i++){
            char ch=w[i];
            if(temp->children.count(ch)){
                temp=temp->children[ch];
            }
            else{
                Node *n=new Node(ch);
                temp->children[ch]=n;
                temp=n;
            }
        }
        temp->terminal=true;
    }

    bool query(char *w){
        Node *temp=root;
        for(int i=0;w[i]!='\0';i++){
            char ch=w[i];
            if(temp->children.count(ch)==0){return false;}
            else{temp=temp->children[ch];}
        }
        return temp->terminal;
    }

};



int main(){
    trie t;
    char words[10][10]={"a","hello","not","apple","no"};
    char a[10];
    cin>>a;
    for(int i=0;i<5;i++)t.insert(words[i]);
    (t.query(a))?cout<<"yes":cout<<"no";

    return 0;
}
